# -*- Makefile -*-
### Makefile - VHDL Makefile generated by Emacs VHDL Mode 3.33.28

# Directory : "~/github/isa/lab3/riscv_abs/hdl/src/"
# Platform  : GHDL
# Generated : 2022-02-10 01:47:42 isa18_2021_2022


# Define compilation command and options

COMPILE = ghdl
OPTIONS = -i --workdir=work --ieee=synopsys -fexplicit 


# Define library paths

LIBRARY-work = work


# Define library unit files

UNIT-work-absolute_value = \
	$(LIBRARY-work)/absolute_value/entity
UNIT-work-absolute_value-str = \
	$(LIBRARY-work)/absolute_value/str
UNIT-work-add_sub = \
	$(LIBRARY-work)/add_sub/entity
UNIT-work-add_sub-str = \
	$(LIBRARY-work)/add_sub/str
UNIT-work-alu = \
	$(LIBRARY-work)/alu/entity
UNIT-work-alu-str = \
	$(LIBRARY-work)/alu/str
UNIT-work-alu_control = \
	$(LIBRARY-work)/alu_control/entity
UNIT-work-alu_control-str = \
	$(LIBRARY-work)/alu_control/str
UNIT-work-barrel_shifter = \
	$(LIBRARY-work)/barrel_shifter/entity
UNIT-work-barrel_shifter-str = \
	$(LIBRARY-work)/barrel_shifter/str
UNIT-work-control = \
	$(LIBRARY-work)/control/entity
UNIT-work-control-str = \
	$(LIBRARY-work)/control/str
UNIT-work-dec_5to32 = \
	$(LIBRARY-work)/dec_5to32/entity
UNIT-work-dec_5to32-arch = \
	$(LIBRARY-work)/dec_5to32/arch
UNIT-work-decode_stage = \
	$(LIBRARY-work)/decode_stage/entity
UNIT-work-decode_stage-str = \
	$(LIBRARY-work)/decode_stage/str
UNIT-work-decode_stage_control = \
	$(LIBRARY-work)/decode_stage_control/entity
UNIT-work-decode_stage_control-str = \
	$(LIBRARY-work)/decode_stage_control/str
UNIT-work-execute_stage = \
	$(LIBRARY-work)/execute_stage/entity
UNIT-work-execute_stage-str = \
	$(LIBRARY-work)/execute_stage/str
UNIT-work-execute_stage_control = \
	$(LIBRARY-work)/execute_stage_control/entity
UNIT-work-execute_stage_control-str = \
	$(LIBRARY-work)/execute_stage_control/str
UNIT-work-fetch_stage = \
	$(LIBRARY-work)/fetch_stage/entity
UNIT-work-fetch_stage-str = \
	$(LIBRARY-work)/fetch_stage/str
UNIT-work-forwarding_unit = \
	$(LIBRARY-work)/forwarding_unit/entity
UNIT-work-forwarding_unit-str = \
	$(LIBRARY-work)/forwarding_unit/str
UNIT-work-hazard_unit = \
	$(LIBRARY-work)/hazard_unit/entity
UNIT-work-hazard_unit-str = \
	$(LIBRARY-work)/hazard_unit/str
UNIT-work-immediate_generator = \
	$(LIBRARY-work)/immediate_generator/entity
UNIT-work-immediate_generator-str = \
	$(LIBRARY-work)/immediate_generator/str
UNIT-work-mem_stage = \
	$(LIBRARY-work)/mem_stage/entity
UNIT-work-mem_stage-str = \
	$(LIBRARY-work)/mem_stage/str
UNIT-work-mem_stage_control = \
	$(LIBRARY-work)/mem_stage_control/entity
UNIT-work-mem_stage_control-str = \
	$(LIBRARY-work)/mem_stage_control/str
UNIT-work-mux_2to1 = \
	$(LIBRARY-work)/mux_2to1/entity
UNIT-work-mux_2to1-arch = \
	$(LIBRARY-work)/mux_2to1/arch
UNIT-work-mux_2to1_bit = \
	$(LIBRARY-work)/mux_2to1_bit/entity
UNIT-work-mux_2to1_bit-str = \
	$(LIBRARY-work)/mux_2to1_bit/str
UNIT-work-mux_2to1_stall = \
	$(LIBRARY-work)/mux_2to1_stall/entity
UNIT-work-mux_2to1_stall-str = \
	$(LIBRARY-work)/mux_2to1_stall/str
UNIT-work-mux_32to1 = \
	$(LIBRARY-work)/mux_32to1/entity
UNIT-work-mux_32to1-arch = \
	$(LIBRARY-work)/mux_32to1/arch
UNIT-work-mux_4to1 = \
	$(LIBRARY-work)/mux_4to1/entity
UNIT-work-mux_4to1-str = \
	$(LIBRARY-work)/mux_4to1/str
UNIT-work-param_pkg = \
	$(LIBRARY-work)/param_pkg/package
UNIT-work-ram = \
	$(LIBRARY-work)/ram/entity
UNIT-work-ram-rtl = \
	$(LIBRARY-work)/ram/rtl
UNIT-work-reg = \
	$(LIBRARY-work)/reg/entity
UNIT-work-reg-arch = \
	$(LIBRARY-work)/reg/arch
UNIT-work-reg_file = \
	$(LIBRARY-work)/reg_file/entity
UNIT-work-reg_file-arch = \
	$(LIBRARY-work)/reg_file/arch
UNIT-work-rv32i = \
	$(LIBRARY-work)/rv32i/entity
UNIT-work-rv32i-str = \
	$(LIBRARY-work)/rv32i/str
UNIT-work-rv32i_control = \
	$(LIBRARY-work)/rv32i_control/entity
UNIT-work-rv32i_control-str = \
	$(LIBRARY-work)/rv32i_control/str
UNIT-work-unary_and = \
	$(LIBRARY-work)/unary_and/entity
UNIT-work-unary_and-str = \
	$(LIBRARY-work)/unary_and/str
UNIT-work-wb_stage = \
	$(LIBRARY-work)/wb_stage/entity
UNIT-work-wb_stage-str = \
	$(LIBRARY-work)/wb_stage/str


# Define list of all library unit files

ALL_UNITS = \
	$(UNIT-work-absolute_value) \
	$(UNIT-work-absolute_value-str) \
	$(UNIT-work-add_sub) \
	$(UNIT-work-add_sub-str) \
	$(UNIT-work-alu) \
	$(UNIT-work-alu-str) \
	$(UNIT-work-alu_control) \
	$(UNIT-work-alu_control-str) \
	$(UNIT-work-barrel_shifter) \
	$(UNIT-work-barrel_shifter-str) \
	$(UNIT-work-control) \
	$(UNIT-work-control-str) \
	$(UNIT-work-dec_5to32) \
	$(UNIT-work-dec_5to32-arch) \
	$(UNIT-work-decode_stage) \
	$(UNIT-work-decode_stage-str) \
	$(UNIT-work-decode_stage_control) \
	$(UNIT-work-decode_stage_control-str) \
	$(UNIT-work-execute_stage) \
	$(UNIT-work-execute_stage-str) \
	$(UNIT-work-execute_stage_control) \
	$(UNIT-work-execute_stage_control-str) \
	$(UNIT-work-fetch_stage) \
	$(UNIT-work-fetch_stage-str) \
	$(UNIT-work-forwarding_unit) \
	$(UNIT-work-forwarding_unit-str) \
	$(UNIT-work-hazard_unit) \
	$(UNIT-work-hazard_unit-str) \
	$(UNIT-work-immediate_generator) \
	$(UNIT-work-immediate_generator-str) \
	$(UNIT-work-mem_stage) \
	$(UNIT-work-mem_stage-str) \
	$(UNIT-work-mem_stage_control) \
	$(UNIT-work-mem_stage_control-str) \
	$(UNIT-work-mux_2to1) \
	$(UNIT-work-mux_2to1-arch) \
	$(UNIT-work-mux_2to1_bit) \
	$(UNIT-work-mux_2to1_bit-str) \
	$(UNIT-work-mux_2to1_stall) \
	$(UNIT-work-mux_2to1_stall-str) \
	$(UNIT-work-mux_32to1) \
	$(UNIT-work-mux_32to1-arch) \
	$(UNIT-work-mux_4to1) \
	$(UNIT-work-mux_4to1-str) \
	$(UNIT-work-param_pkg) \
	$(UNIT-work-ram) \
	$(UNIT-work-ram-rtl) \
	$(UNIT-work-reg) \
	$(UNIT-work-reg-arch) \
	$(UNIT-work-reg_file) \
	$(UNIT-work-reg_file-arch) \
	$(UNIT-work-rv32i) \
	$(UNIT-work-rv32i-str) \
	$(UNIT-work-rv32i_control) \
	$(UNIT-work-rv32i_control-str) \
	$(UNIT-work-unary_and) \
	$(UNIT-work-unary_and-str) \
	$(UNIT-work-wb_stage) \
	$(UNIT-work-wb_stage-str)



# Rule for compiling entire design

all : \
		library \
		$(ALL_UNITS)


# Rule for cleaning entire design

clean : 
	-rm -f $(ALL_UNITS)


# Rule for creating library directory

library : \
		$(LIBRARY-work)

$(LIBRARY-work) :
	mkdir $(LIBRARY-work)


.PHONY : all clean library


# Rules for compiling single library units and their subhierarchy

absolute_value : \
		library \
		$(UNIT-work-absolute_value) \
		$(UNIT-work-absolute_value-str)

add_sub : \
		library \
		$(UNIT-work-add_sub) \
		$(UNIT-work-add_sub-str)

alu : \
		library \
		$(UNIT-work-alu) \
		$(UNIT-work-alu-str) \
		add_sub \
		barrel_shifter \
		unary_and

alu_control : \
		library \
		$(UNIT-work-alu_control) \
		$(UNIT-work-alu_control-str)

barrel_shifter : \
		library \
		$(UNIT-work-barrel_shifter) \
		$(UNIT-work-barrel_shifter-str) \
		mux_2to1_bit

control : \
		library \
		$(UNIT-work-control) \
		$(UNIT-work-control-str)

dec_5to32 : \
		library \
		$(UNIT-work-dec_5to32) \
		$(UNIT-work-dec_5to32-arch)

decode_stage : \
		library \
		$(UNIT-work-decode_stage) \
		$(UNIT-work-decode_stage-str) \
		immediate_generator \
		reg_file

decode_stage_control : \
		library \
		$(UNIT-work-decode_stage_control) \
		$(UNIT-work-decode_stage_control-str) \
		control \
		hazard_unit \
		mux_2to1_stall

execute_stage : \
		library \
		$(UNIT-work-execute_stage) \
		$(UNIT-work-execute_stage-str) \
		absolute_value \
		alu \
		mux_2to1 \
		mux_4to1

execute_stage_control : \
		library \
		$(UNIT-work-execute_stage_control) \
		$(UNIT-work-execute_stage_control-str) \
		alu_control \
		forwarding_unit

fetch_stage : \
		library \
		$(UNIT-work-fetch_stage) \
		$(UNIT-work-fetch_stage-str) \
		mux_2to1 \
		reg

forwarding_unit : \
		library \
		$(UNIT-work-forwarding_unit) \
		$(UNIT-work-forwarding_unit-str)

hazard_unit : \
		library \
		$(UNIT-work-hazard_unit) \
		$(UNIT-work-hazard_unit-str)

immediate_generator : \
		library \
		$(UNIT-work-immediate_generator) \
		$(UNIT-work-immediate_generator-str)

mem_stage : \
		library \
		$(UNIT-work-mem_stage) \
		$(UNIT-work-mem_stage-str)

mem_stage_control : \
		library \
		$(UNIT-work-mem_stage_control) \
		$(UNIT-work-mem_stage_control-str)

mux_2to1 : \
		library \
		$(UNIT-work-mux_2to1) \
		$(UNIT-work-mux_2to1-arch)

mux_2to1_bit : \
		library \
		$(UNIT-work-mux_2to1_bit) \
		$(UNIT-work-mux_2to1_bit-str)

mux_2to1_stall : \
		library \
		$(UNIT-work-mux_2to1_stall) \
		$(UNIT-work-mux_2to1_stall-str)

mux_32to1 : \
		library \
		$(UNIT-work-mux_32to1) \
		$(UNIT-work-mux_32to1-arch) \
		param_pkg

mux_4to1 : \
		library \
		$(UNIT-work-mux_4to1) \
		$(UNIT-work-mux_4to1-str)

param_pkg : \
		library \
		$(UNIT-work-param_pkg)

ram : \
		library \
		$(UNIT-work-ram) \
		$(UNIT-work-ram-rtl)

reg : \
		library \
		$(UNIT-work-reg) \
		$(UNIT-work-reg-arch)

reg_file : \
		library \
		$(UNIT-work-reg_file) \
		$(UNIT-work-reg_file-arch) \
		dec_5to32 \
		mux_32to1 \
		param_pkg \
		reg

rv32i \
RV32I : \
		library \
		$(UNIT-work-rv32i) \
		$(UNIT-work-rv32i-str) \
		decode_stage \
		execute_stage \
		fetch_stage \
		mem_stage \
		rv32i_control \
		wb_stage

rv32i_control \
RV32I_control : \
		library \
		$(UNIT-work-rv32i_control) \
		$(UNIT-work-rv32i_control-str) \
		decode_stage_control \
		execute_stage_control \
		mem_stage_control

unary_and \
unary_AND : \
		library \
		$(UNIT-work-unary_and) \
		$(UNIT-work-unary_and-str)

wb_stage : \
		library \
		$(UNIT-work-wb_stage) \
		$(UNIT-work-wb_stage-str) \
		mux_4to1


# Rules for compiling single library unit files

$(UNIT-work-absolute_value) \
$(UNIT-work-absolute_value-str) : \
		absolute_value.vhd
	$(COMPILE) $(OPTIONS) absolute_value.vhd

$(UNIT-work-add_sub) \
$(UNIT-work-add_sub-str) : \
		add_sub.vhd
	$(COMPILE) $(OPTIONS) add_sub.vhd

$(UNIT-work-alu) \
$(UNIT-work-alu-str) : \
		alu.vhd \
		$(UNIT-work-add_sub) \
		$(UNIT-work-barrel_shifter) \
		$(UNIT-work-unary_and)
	$(COMPILE) $(OPTIONS) alu.vhd

$(UNIT-work-alu_control) \
$(UNIT-work-alu_control-str) : \
		alu_control.vhd
	$(COMPILE) $(OPTIONS) alu_control.vhd

$(UNIT-work-barrel_shifter) \
$(UNIT-work-barrel_shifter-str) : \
		barrel_shifter.vhd \
		$(UNIT-work-mux_2to1_bit)
	$(COMPILE) $(OPTIONS) barrel_shifter.vhd

$(UNIT-work-control) \
$(UNIT-work-control-str) : \
		control.vhd
	$(COMPILE) $(OPTIONS) control.vhd

$(UNIT-work-dec_5to32) \
$(UNIT-work-dec_5to32-arch) : \
		dec_5to32.vhd
	$(COMPILE) $(OPTIONS) dec_5to32.vhd

$(UNIT-work-decode_stage) \
$(UNIT-work-decode_stage-str) : \
		decode_stage.vhd \
		$(UNIT-work-immediate_generator) \
		$(UNIT-work-reg_file)
	$(COMPILE) $(OPTIONS) decode_stage.vhd

$(UNIT-work-decode_stage_control) \
$(UNIT-work-decode_stage_control-str) : \
		decode_stage_control.vhd \
		$(UNIT-work-control) \
		$(UNIT-work-hazard_unit) \
		$(UNIT-work-mux_2to1_stall)
	$(COMPILE) $(OPTIONS) decode_stage_control.vhd

$(UNIT-work-execute_stage) \
$(UNIT-work-execute_stage-str) : \
		execute_stage.vhd \
		$(UNIT-work-absolute_value) \
		$(UNIT-work-alu) \
		$(UNIT-work-mux_2to1) \
		$(UNIT-work-mux_4to1)
	$(COMPILE) $(OPTIONS) execute_stage.vhd

$(UNIT-work-execute_stage_control) \
$(UNIT-work-execute_stage_control-str) : \
		execute_stage_control.vhd \
		$(UNIT-work-alu_control) \
		$(UNIT-work-forwarding_unit)
	$(COMPILE) $(OPTIONS) execute_stage_control.vhd

$(UNIT-work-fetch_stage) \
$(UNIT-work-fetch_stage-str) : \
		fetch_stage.vhd \
		$(UNIT-work-mux_2to1) \
		$(UNIT-work-reg)
	$(COMPILE) $(OPTIONS) fetch_stage.vhd

$(UNIT-work-forwarding_unit) \
$(UNIT-work-forwarding_unit-str) : \
		forwarding_unit.vhd
	$(COMPILE) $(OPTIONS) forwarding_unit.vhd

$(UNIT-work-hazard_unit) \
$(UNIT-work-hazard_unit-str) : \
		hazard_unit.vhd
	$(COMPILE) $(OPTIONS) hazard_unit.vhd

$(UNIT-work-immediate_generator) \
$(UNIT-work-immediate_generator-str) : \
		immediate_generator.vhd
	$(COMPILE) $(OPTIONS) immediate_generator.vhd

$(UNIT-work-mem_stage) \
$(UNIT-work-mem_stage-str) : \
		mem_stage.vhd
	$(COMPILE) $(OPTIONS) mem_stage.vhd

$(UNIT-work-mem_stage_control) \
$(UNIT-work-mem_stage_control-str) : \
		mem_stage_control.vhd
	$(COMPILE) $(OPTIONS) mem_stage_control.vhd

$(UNIT-work-mux_2to1) \
$(UNIT-work-mux_2to1-arch) : \
		mux_2to1.vhd
	$(COMPILE) $(OPTIONS) mux_2to1.vhd

$(UNIT-work-mux_2to1_bit) \
$(UNIT-work-mux_2to1_bit-str) : \
		mux_2to1_bit.vhd
	$(COMPILE) $(OPTIONS) mux_2to1_bit.vhd

$(UNIT-work-mux_2to1_stall) \
$(UNIT-work-mux_2to1_stall-str) : \
		mux_2to1_stall.vhd
	$(COMPILE) $(OPTIONS) mux_2to1_stall.vhd

$(UNIT-work-mux_32to1) \
$(UNIT-work-mux_32to1-arch) : \
		mux_32to1.vhd \
		$(UNIT-work-param_pkg)
	$(COMPILE) $(OPTIONS) mux_32to1.vhd

$(UNIT-work-mux_4to1) \
$(UNIT-work-mux_4to1-str) : \
		mux_4to1.vhd
	$(COMPILE) $(OPTIONS) mux_4to1.vhd

$(UNIT-work-param_pkg) : \
		param_pkg.vhd
	$(COMPILE) $(OPTIONS) param_pkg.vhd

$(UNIT-work-ram) \
$(UNIT-work-ram-rtl) : \
		ram.vhd
	$(COMPILE) $(OPTIONS) ram.vhd

$(UNIT-work-reg) \
$(UNIT-work-reg-arch) : \
		reg.vhd
	$(COMPILE) $(OPTIONS) reg.vhd

$(UNIT-work-reg_file) \
$(UNIT-work-reg_file-arch) : \
		reg_file.vhd \
		$(UNIT-work-dec_5to32) \
		$(UNIT-work-mux_32to1) \
		$(UNIT-work-param_pkg) \
		$(UNIT-work-reg)
	$(COMPILE) $(OPTIONS) reg_file.vhd

$(UNIT-work-rv32i) \
$(UNIT-work-rv32i-str) : \
		RV32I.vhd \
		$(UNIT-work-decode_stage) \
		$(UNIT-work-execute_stage) \
		$(UNIT-work-fetch_stage) \
		$(UNIT-work-mem_stage) \
		$(UNIT-work-rv32i_control) \
		$(UNIT-work-wb_stage)
	$(COMPILE) $(OPTIONS) RV32I.vhd

$(UNIT-work-rv32i_control) \
$(UNIT-work-rv32i_control-str) : \
		RV32I_control.vhd \
		$(UNIT-work-decode_stage_control) \
		$(UNIT-work-execute_stage_control) \
		$(UNIT-work-mem_stage_control)
	$(COMPILE) $(OPTIONS) RV32I_control.vhd

$(UNIT-work-unary_and) \
$(UNIT-work-unary_and-str) : \
		unary_AND.vhd
	$(COMPILE) $(OPTIONS) unary_AND.vhd

$(UNIT-work-wb_stage) \
$(UNIT-work-wb_stage-str) : \
		wb_stage.vhd \
		$(UNIT-work-mux_4to1)
	$(COMPILE) $(OPTIONS) wb_stage.vhd


### Makefile ends here
